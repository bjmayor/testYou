<?phpdefined('BASEPATH') OR exit('No direct script access allowed');/*** 跳转题和单选题,如果"next"是字符刚是直接跳转结论 *{"question":{        "title":"自动导入标题",    "description":"自动导入描述",    "seo_keyword":"",    "img":"",    "sub_questions":[    {        "img": "",        "question": "很久以前，有一位公主看似生活的幸福，可她并不快乐。你觉得是为什么？",        "answer": {            "a": {                "title": "每天重复同样的事没有新鲜感",                "next": "2"            },            "b": {                "title": "白马王子还未出现",                "next": "5"            }        }    },    {        "img": "",        "question": "某天公主悄悄地溜出皇宫，遇上了心仪的男生你猜他属于哪个类型？",        "answer": {            "a": {                "title": "像古天乐一样又帅又野性",                "next": "3"            },            "b": {                "title": "像李易峰一样很标致很乖",                "next": "6"            }        }    },    {        "img": "",        "question": "其实那男生是邻国的王子，公主得知后心情会怎样？",        "answer": {            "a": {                "title": "太好了，我们真是天生一对！",                "next": "8"            },            "b": {                "title": "无聊，我嫁给他之后又要过着昔日的沉闷生活",                "next": "7"            }        }    },    {        "img": "",        "question": "公主和王子终于可以步入教堂，你猜他们在婚礼后，第一件事是去做什么？",        "answer": {            "a": {                "title": "在城堡中的庭园悠闲地品茶",                "next": "E"            },            "b": {                "title": "两人细谈将来的梦想",                "next": "F"            }        }    }],"results":[{"A":{"title":"","description":"","img":""}},{"B":{"title":"","description":"","img":""}},{"C":{"title":"","description":"","img":""}}]}}  **/class LoadJson extends Admin_Controller{        function __construct()    {        parent::__construct();        $this->data['sites'] = array(array("type"=>0,"site"=>"http://www.aiwenchan.com/"));        $this->load->model('question_model');        $this->load->model('answer_model');        $this->load->model('result_model');        $this->load->model('meta_model');    }    public function index()    {        $this->template->admin_render('admin/loadjson/index', $this->data);    }    public function load()    {        $error = "";        $this->loadStandardJson($this->input->post('data'),$error);        if($error!="")        {            $this->data['error_msg'] = $error;        }        $this->template->admin_render('admin/loadjson/index', $this->data);    }    //导入标准的json数据    private function loadStandardJson($data,&$error)    {        if($this->checkValid($data,$error))        {            $ret = json_decode($data);             $meta_id =  $this->meta_model->insert_meta(                $ret->question->title,                $ret->question->description,                $ret->question->seo_keywords             );            if($meta_id==false)            {                $error = "创建seo属性失败";                return false;            }            if($ret->question->img!='')            {                //do download img                $fname = "question".time().".jpg";                file_put_contents("upload/question/".$fname, file_get_contents($ret->question->img));                return;            }            $question_id = $this->question_model->insert_question(array(                'title'=>$ret->question->title,                'description'=>$ret->question->description,                'img'=>$ret->question->img,                'question_category_id'=>$this->input->post('question_category_id'),                'question_type'=>$this->input->post('question_type'),                'publish_status'=>$this->input->post('publish_status'),                'meta_id'=>$meta_id            ));           $question = array("");        }        else        {            return  false;        }    }    private function checkValid($data,&$error)    {        $ret = json_decode($data);        if(!$ret)        {            $error = "json格式不合法";            return false;        }        if(!property_exists($ret,'question'))        {            $error = "数据非法,question未设置";            return false;        }        if(!property_exists($ret->question,'title')            || !property_exists($ret->question,'description')            || !property_exists($ret->question,'seo_keywords')            || !property_exists($ret->question,'img'))        {            $error = "question对象属性设置不正确";            return false;        }        if(!property_exists($ret,'sub_questions') ||  !is_array($ret->sub_questions))        {            $error = "数据非法,sub_questions未设置";            return false;        }         if( !property_exists($ret,'results') || !is_array($ret->results))        {            $error = "数据非法,results未设置";            return false;        }         return true;    }}?>